/*
 * Simple Inventory API
 *
 * This is a RESTfil API for Muzendis Travel Company
 *
 * OpenAPI spec version: 1.0.0
 * Contact: imail.for.iwork@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using Muzendis.Context;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class UsersApiController : Controller
    {
        
        ICountriesContext context;

        public UsersApiController(ICountriesContext context)
        {
            this.context = context;
        }


        /// <summary>
        /// delete an Country
        /// </summary>
        /// <remarks>delete an Country with her Cities</remarks>
        /// <param name="id">id of country for deletion</param>
        /// <response code="200">OK</response>
        /// <response code="400">invalid input parameter</response>
        /// <response code="404">object not exists</response>
        [HttpDelete]
        [Route("/api/v1/muzendis/country/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteCountry")]
        [SwaggerResponse(200, typeof(bool), "OK")]
        [SwaggerResponse(400, typeof(ErrorMessage), "invalid input parameter")]
        [SwaggerResponse(404, typeof(ErrorMessage), "object not exists")]
        public virtual IActionResult DeleteCountry([FromRoute]decimal? id)
        {
                try
                {
                    int _id = Decimal.ToInt32(id ?? 0);
                    if (_id == 0) throw new Exception("null id argument");
                    
                    if (context.DeleteCountry(_id))
                    {
                        Response.StatusCode = 200;
                        return new ObjectResult(true);
                    }
                    else
                    {
                        Response.StatusCode = 404;
                        return new ObjectResult(new ErrorMessage()
                        {
                            Code = "404",
                            Message = "object not exists"
                        });
                    }   
                }
                catch (Exception e)
                {
                    // some logging
                    Response.StatusCode = 400;
                    return new ObjectResult(new ErrorMessage()
                    {
                        Code = "400",
                        Message = "invalid input parameter"
                    });
                }
        }

        /// <summary>
        /// get countries by query params
        /// </summary>
        /// <remarks>get countries with his Cities by search query params</remarks>
        /// <param name="country">name of country for search</param>
        /// <param name="term">term for search</param>
        /// <param name="limit">maximum number of records per page</param>
        /// <response code="200">OK</response>
        /// <response code="400">invalid input, query invalid</response>
        /// <response code="404">empty collection</response>
        [HttpGet]
        [Route("/api/v1/muzendis/country")]
        [ValidateModelState]
        [SwaggerOperation("GetCountriesByQuery")]
        [SwaggerResponse(200, typeof(List<Country>), "OK")]
        [SwaggerResponse(400, typeof(ErrorMessage), "invalid input, query invalid")]
        [SwaggerResponse(404, typeof(List<Country>), "empty collection")]
        public virtual IActionResult GetCountriesByQuery([FromQuery]string country, [FromQuery]string term)
        {
            // 400 dodelat
            var countries = context.SearchCountries(country, term);

            if (countries.Count == 0)
            {
                Response.StatusCode = 404;
                return new ObjectResult(countries);
            }
            else
            {
                Response.StatusCode = 200;
                return new ObjectResult(countries);
            }
        }

        /// <summary>
        /// get country by id
        /// </summary>
        /// <remarks>get country and his cities by id</remarks>
        /// <param name="id">id of country</param>
        /// <response code="200">OK</response>
        /// <response code="400">invalid input parameter</response>
        /// <response code="404">object not exists</response>
        [HttpGet]
        [Route("/api/v1/muzendis/country/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetCountryById")]
        [SwaggerResponse(200, typeof(Country), "OK")]
        [SwaggerResponse(400, typeof(ErrorMessage), "invalid input parameter")]
        [SwaggerResponse(404, typeof(ErrorMessage), "object not exists")]
        public virtual IActionResult GetCountryById([FromRoute]decimal? id)
        {
            try
            {
                int _id = Decimal.ToInt32(id ?? 0);
                if (_id == 0) throw new Exception("null id argument");

                var country = context.GetCountry(_id);
                if (country != null)
                {
                    Response.StatusCode = 200;
                    return new ObjectResult(country);
                }
                else
                {
                    Response.StatusCode = 404;
                    return new ObjectResult(new ErrorMessage()
                    {
                        Code = "404",
                        Message = "object not exists"
                    });
                }
            }
            catch (Exception e)
            {
                // some logging
                Response.StatusCode = 400;
                return new ObjectResult(new ErrorMessage()
                {
                    Code = "400",
                    Message = "invalid input parameter"
                });
            }

        }

        /// <summary>
        /// create new Country
        /// </summary>
        /// <remarks>create new Country</remarks>
        /// <param name="country">country object for creation</param>
        /// <response code="201">created</response>
        /// <response code="400">invalid input, object invalid</response>
        /// <response code="409">object already exists</response>
        [HttpPost]
        [Route("/api/v1/muzendis/country")]
        [ValidateModelState]
        [SwaggerOperation("SetCountry")]
        [SwaggerResponse(201, typeof(bool), "OK")]
        [SwaggerResponse(400, typeof(ErrorMessage), "invalid input, object invalid")]
        [SwaggerResponse(409, typeof(ErrorMessage), "object already exists")]
        public virtual IActionResult SetCountry([FromBody]Country country)
        {
            // 409
            if(context.SearchCountries(country.Name, "").Count != 0)
            {
                Response.StatusCode = 409;
                return new ObjectResult(new ErrorMessage()
                {
                    Code = "409",
                    Message = "object already exists"
                });
            }

            if (context.CreateCountry(country))
            {
                Response.StatusCode = 201;
                return new ObjectResult(true);
            }
            else
            {
                Response.StatusCode = 400;
                return new ObjectResult(new ErrorMessage()
                {
                    Code = "400",
                    Message = "invalid input, object invalid"
                });
            }
        }

        /// <summary>
        /// update an Country
        /// </summary>
        /// <remarks>update an Country</remarks>
        /// <param name="country">country object for update</param>
        /// <response code="200">OK</response>
        /// <response code="400">invalid input, object invalid</response>
        /// <response code="404">object not exists</response>
        [HttpPut]
        [Route("/api/v1/muzendis/country")]
        [ValidateModelState]
        [SwaggerOperation("UpdateCountry")]
        [SwaggerResponse(201, typeof(bool), "OK")]
        [SwaggerResponse(400, typeof(ErrorMessage), "invalid input, object invalid")]
        [SwaggerResponse(404, typeof(ErrorMessage), "object not exists")]
        public virtual IActionResult UpdateCountry([FromBody]Country country)
        {
            // 404
            if (context.SearchCountries(country.Name, "").Count == 0)
            {
                Response.StatusCode = 404;
                return new ObjectResult(new ErrorMessage()
                {
                    Code = "404",
                    Message = "object not exists"
                });
            }

            if (context.UpdateCountry(country))
            {
                Response.StatusCode = 201;
                return new ObjectResult(true);
            }
            else
            {
                Response.StatusCode = 400;
                return new ObjectResult(new ErrorMessage()
                {
                    Code = "400",
                    Message = "invalid input, object invalid"
                });
            }
        }
    }
}
